import{_ as s,c as t,a as n,o as e}from"./app-BPmJL-vo.js";const i="/images/um-cv-2/20-8.png",r="/images/um-cv-2/20-9.png",p="/images/um-cv-2/20-11.png",m="/images/um-cv-2/20-12.png",o="/images/um-cv-2/20-13.png",l="/images/um-cv-2/20-14.png",c="/images/um-cv-2/20-15.png",h="/images/um-cv-2/20-16.png",g="/images/um-cv-2/20-17.png",d="/images/um-cv-2/20-18.png",u="/images/um-cv-2/20-19.png",v="/images/um-cv-2/20-20.png",w="/images/um-cv-2/20-21.png",b="/images/um-cv-2/20-22.png",x={};function y(f,a){return e(),t("div",null,[...a[0]||(a[0]=[n('<p>Generative adversarial networks: architecture, training objective, optimality, and variants of GANs.</p><p>@Credits: <a href="https://web.eecs.umich.edu/~justincj/teaching/eecs498/WI2022/" target="_blank" rel="noopener noreferrer">EECS 498.007</a> | Video Lecture: <a href="https://www.youtube.com/watch?v=dJYGatp4SvA&amp;list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r" target="_blank" rel="noopener noreferrer">UM-CV</a></p><p>Personal work for the assignments of the course: <a href="https://github.com/SaturnTsen/EECS-498-007/" target="_blank" rel="noopener noreferrer">github repo</a>.</p><p><strong>Notice on Usage and Attribution</strong></p><p>These are personal class notes based on the University of Michigan EECS 498.008 / 598.008 course. They are intended solely for personal learning and academic discussion, with no commercial use.</p><p>For detailed information, please refer to the <strong><a href="#notice-on-usage-and-attribution">complete notice at the end of this document</a></strong></p><h2 id="generative-adversarial-networks" tabindex="-1"><a class="header-anchor" href="#generative-adversarial-networks"><span>Generative Adversarial Networks</span></a></h2><p>Setup: Assume we have data <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> drawn from distribution <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_{data}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>. Want to sample from <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{data}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h3 id="architecture" tabindex="-1"><a class="header-anchor" href="#architecture"><span>Architecture</span></a></h3><p>Idea: Introduce a latent variable <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> with simple prior <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></p><ul><li>Sample <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>∼</mo><mi>p</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z\\sim p(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> and pass to a <strong>Generator Network</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>G</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=G(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span></li><li>Then <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> is a sample from the <strong>generator distribution</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>G</mi></msub></mrow><annotation encoding="application/x-tex">p_G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. Want <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>G</mi></msub><mo>=</mo><msub><mi>p</mi><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_G=p_{data}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>The Discriminator Network <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> is trained to classify data as real or fake</li></ul><div class="img-wrapper"><img src="'+i+'" width="85%"><br> GAN</div><h3 id="training-objective" tabindex="-1"><a class="header-anchor" href="#training-objective"><span>Training Objective</span></a></h3><div class="img-wrapper"><img src="'+r+'" width="85%"><br> GAN: Training Objective</div><p>Problems:</p><ul><li>We are not minimizing any overall loss, and there is no training curves to look at.</li><li>Vanishing gradients for G: <img src="'+p+'" width="85%"></li></ul><h3 id="optimality" tabindex="-1"><a class="header-anchor" href="#optimality"><span>Optimality</span></a></h3><h4 id="optimal-discriminator" tabindex="-1"><a class="header-anchor" href="#optimal-discriminator"><span>Optimal Discriminator</span></a></h4><p>This expression cannot be computed since it involves <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>d</mi><mi>a</mi><mi>t</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{data}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><div class="img-wrapper"><img src="'+m+'" width="85%"><br> GAN: Optimal Discriminator</div><h4 id="optimality-1" tabindex="-1"><a class="header-anchor" href="#optimality-1"><span>Optimality</span></a></h4><div class="img-wrapper"><img src="'+o+'" width="85%"><br> GAN: Jensen-Shannon Divergence</div><h4 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h4><div class="img-wrapper"><img src="'+l+'" width="85%"><br> GAN: Jensen-Shannon Divergence</div><h2 id="variants-of-gan" tabindex="-1"><a class="header-anchor" href="#variants-of-gan"><span>Variants of GAN</span></a></h2><h3 id="dc-gan" tabindex="-1"><a class="header-anchor" href="#dc-gan"><span>DC-GAN</span></a></h3><p><a href="https://arxiv.org/abs/1511.06434" target="_blank" rel="noopener noreferrer">Radford et al, ICLR 2016</a></p><div class="img-wrapper"><img src="'+c+'" width="85%"><br> Fun facts</div><div class="img-wrapper"><img src="'+h+'" width="85%"><br> Fun facts</div><h3 id="conditional-gans" tabindex="-1"><a class="header-anchor" href="#conditional-gans"><span>Conditional GANs</span></a></h3><p><a href="https://arxiv.org/abs/1812.04948" target="_blank" rel="noopener noreferrer">A style-based generator architecture for generative adversarial networks, CVPR 2019</a></p><p><a href="https://arxiv.org/abs/1610.07629" target="_blank" rel="noopener noreferrer">A learned representation for artistic style, ICLR 2017</a></p><p>Conditional batch normalization</p><h3 id="biggan" tabindex="-1"><a class="header-anchor" href="#biggan"><span>BigGAN</span></a></h3><p><a href="https://arxiv.org/abs/1809.11096" target="_blank" rel="noopener noreferrer">Large Scale GAN Training for High Fidelity Natural Image Synthesis</a></p><h3 id="generating-videos-with-gans" tabindex="-1"><a class="header-anchor" href="#generating-videos-with-gans"><span>Generating Videos with GANs</span></a></h3><p><a href="https://arxiv.org/abs/1907.06571" target="_blank" rel="noopener noreferrer">Adversarial Video Generation on Complex Datasets, Arxiv 2019</a></p><h3 id="text2img" tabindex="-1"><a class="header-anchor" href="#text2img"><span>Text2Img</span></a></h3><div class="img-wrapper"><img src="'+g+'" width="85%"><br></div><p>Zhang et al, “StackGAN++: Realistic Image Synthesis with Stacked Generative Adversarial Networks.”, TPAMI 2018</p><p>Zhang et al, “StackGAN: Text to Photo-realistic Image Synthesis with Stacked Generative Adversarial Networks.”, ICCV 2017</p><p>Reed et al, “Generative Adversarial Text-to-Image Synthesis”, ICML 2016</p><h3 id="super-resolution" tabindex="-1"><a class="header-anchor" href="#super-resolution"><span>Super-resolution</span></a></h3><div class="img-wrapper"><img src="'+d+'" width="85%"><br></div><p>Ledig et al, “Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network”, CVPR 2017</p><h3 id="pix2pix" tabindex="-1"><a class="header-anchor" href="#pix2pix"><span>Pix2Pix</span></a></h3><div class="img-wrapper"><img src="'+u+'" width="85%"><br></div><p>Isola et al, “Image-to-Image Translation with Conditional Adversarial Nets”, CVPR 2017</p><div class="img-wrapper"><img src="'+v+'" width="85%"><br></div><p>Zhu et al, “Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks”, ICCV 2017</p><h3 id="label-map-to-img" tabindex="-1"><a class="header-anchor" href="#label-map-to-img"><span>Label Map to Img</span></a></h3><div class="img-wrapper"><img src="'+w+'" width="85%"><br></div><p>Park et al, “Semantic Image Synthesis with Spatially-Adaptive Normalization”, CVPR 2019</p><h3 id="trajectory-prediction" tabindex="-1"><a class="header-anchor" href="#trajectory-prediction"><span>Trajectory Prediction</span></a></h3><div class="img-wrapper"><img src="'+b+'" width="85%"><br></div><p>Gupta, Johnson, Li, Savarese, Alahi, “Social GAN: Socially Acceptable Trajectories with Generative Adversarial Networks”, CVPR 2018</p><h2 id="notice-on-usage-and-attribution" tabindex="-1"><a class="header-anchor" href="#notice-on-usage-and-attribution"><span><strong>Notice on Usage and Attribution</strong></span></a></h2><p>This note is based on the <strong>University of Michigan&#39;s publicly available course EECS 498.008 / 598.008</strong> and is intended <strong>solely for personal learning and academic discussion</strong>.</p><ul><li><strong>Nature of the Notes:</strong> These notes include extensive references and citations from course materials to ensure clarity and completeness. However, they are presented as personal interpretations and summaries, not as substitutes for the original course content. Please refer to the official <a href="https://web.eecs.umich.edu/~justincj/teaching/eecs498/WI2022/" target="_blank" rel="noopener noreferrer"><strong>University of Michigan website</strong></a> for complete and accurate course materials.</li><li><strong>Third-Party Open Access Content:</strong> This note may reference Open Access (OA) papers or resources cited within the course materials. These materials are used under their original Open Access licenses (e.g., CC BY, CC BY-SA). Every referenced OA resource is appropriately cited, including the author, publication title, source link, and license type.</li><li><strong>Copyright:</strong> All rights to third-party content remain with their respective authors or publishers. If you believe any content infringes on your copyright, please contact me, and I will promptly remove the content in question.</li></ul><p>Thanks to the <strong>University of Michigan</strong> and the contributors to the course for their openness and dedication to accessible education.</p>',60)])])}const _=s(x,[["render",y]]),A=JSON.parse('{"path":"/notes/um-cv/um-cv-20/","title":"20 Generative Adversarial Networks","lang":"en-US","frontmatter":{"title":"20 Generative Adversarial Networks","tags":["computer-vision"],"createTime":"2025/01/14 20:59:11","permalink":"/notes/um-cv/um-cv-20/","description":"Generative adversarial networks: architecture, training objective, optimality, and variants of GANs. @Credits: EECS 498.007 | Video Lecture: UM-CV Personal work for the assignme...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"20 Generative Adversarial Networks\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T17:44:17.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://saturntsen.github.io/notes/um-cv/um-cv-20/"}],["meta",{"property":"og:site_name","content":"SaturnTsen"}],["meta",{"property":"og:title","content":"20 Generative Adversarial Networks"}],["meta",{"property":"og:description","content":"Generative adversarial networks: architecture, training objective, optimality, and variants of GANs. @Credits: EECS 498.007 | Video Lecture: UM-CV Personal work for the assignme..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-21T17:44:17.000Z"}],["meta",{"property":"article:tag","content":"computer-vision"}],["meta",{"property":"article:modified_time","content":"2025-02-21T17:44:17.000Z"}]]},"readingTime":{"minutes":2.8,"words":841},"git":{"createdTime":1737493530000,"updatedTime":1740159857000,"contributors":[{"name":"SaturnTsen","username":"SaturnTsen","email":"minger233@outlook.com","commits":3,"avatar":"https://avatars.githubusercontent.com/SaturnTsen?v=4","url":"https://github.com/SaturnTsen"}]},"autoDesc":true,"filePathRelative":"notes/UM-CV/UM-CV 20 GAN.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"31a781","sort":10004,"name":"UM-CV"}]}');export{_ as comp,A as data};
