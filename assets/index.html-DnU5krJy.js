import{_ as t,c as a,a as r,o}from"./app-BPmJL-vo.js";const i="/images/um-cv-2/18-1.png",n="/images/um-cv-2/18-2.png",s="/images/um-cv-2/18-3.png",l="/images/um-cv-2/18-4.png",c="/images/um-cv-2/18-5.png",p="/images/um-cv-2/18-6.png",d="/images/um-cv-2/18-7.png",h="/images/um-cv-2/18-8.png",m="/images/um-cv-2/18-9.png",g="/images/um-cv-2/18-10.png",u="/images/um-cv-2/18-11.png",f="/images/um-cv-2/18-12.png",v="/images/um-cv-2/18-13.png",w={};function b(C,e){return o(),a("div",null,[...e[0]||(e[0]=[r('<p>Summary: Video Classification, CNN Architectures for Videos, Two-Stream Networks, Recurrent Structures, Spatial-Temporal Detection, and more.</p><p>@Credits: <a href="https://web.eecs.umich.edu/~justincj/teaching/eecs498/WI2022/" target="_blank" rel="noopener noreferrer">EECS 498.007</a> | Video Lecture: <a href="https://www.youtube.com/watch?v=dJYGatp4SvA&amp;list=PL5-TkQAfAZFbzxjBHtzdVCWE0Zbhomg7r" target="_blank" rel="noopener noreferrer">UM-CV</a></p><p>Personal work for the assignments of the course: <a href="https://github.com/SaturnTsen/EECS-498-007/" target="_blank" rel="noopener noreferrer">github repo</a>.</p><p><strong>Notice on Usage and Attribution</strong></p><p>These are personal class notes based on the University of Michigan EECS 498.008 / 598.008 course. They are intended solely for personal learning and academic discussion, with no commercial use.</p><p>For detailed information, please refer to the <strong><a href="#notice-on-usage-and-attribution">complete notice at the end of this document</a></strong></p><h2 id="intro" tabindex="-1"><a class="header-anchor" href="#intro"><span>Intro</span></a></h2><p>A video is a sequence of images over time. We can think of a video as a 4D tensor: (T, C, H, W).</p><ul><li>T: time, C: channels, H: height, W: width</li></ul><h3 id="today-video-classification" tabindex="-1"><a class="header-anchor" href="#today-video-classification"><span>Today: Video Classification</span></a></h3><p>Images: Recognize objects</p><ul><li>Dog, Cat, Fish, Truck</li></ul><p>Videos: Recognize actions</p><ul><li>Swimming, Running, Jumping, Eating, Standing</li></ul><h3 id="training-on-clips" tabindex="-1"><a class="header-anchor" href="#training-on-clips"><span>Training on Clips</span></a></h3><p>Uncompressed video: 3 bytes per pixel</p><ul><li>SD (640x480)ï¼š~1.5 GB per minute</li><li>HD (1920x1080): ~5 GB per minute</li></ul><p>Solution: Train on short clips</p><ul><li>Low fps and low spatial resolution. e.g. T=16, H=W=112 (3.2 seconds at 5 fps, 588KB) -Testing: Run model on different clips, average predictions.</li></ul><h2 id="cnn-architectures-for-videos" tabindex="-1"><a class="header-anchor" href="#cnn-architectures-for-videos"><span>CNN Architectures for Videos</span></a></h2><h3 id="single-frame-cnn" tabindex="-1"><a class="header-anchor" href="#single-frame-cnn"><span>Single-Frame CNN</span></a></h3><p>Simple idea: train a normal 2D CNN to classify video frames independently and average the predictions. On the contrary, this is a very strong baseline for video classification.</p><div class="img-wrapper"><img src="'+i+'" width="50%" alt="Single-Frame CNN"><br> Fig: Single-Frame CNN</div><h3 id="late-fusion" tabindex="-1"><a class="header-anchor" href="#late-fusion"><span>Late Fusion</span></a></h3><ol><li>Single frame CNN + FC layers</li></ol><div class="img-wrapper"><img src="'+n+'" width="50%" alt="Late Fusion"><br> Fig: Late Fusion</div><ol start="2"><li>with pooling</li></ol><div class="img-wrapper"><img src="'+s+'" width="50%" alt="Late Fusion with Pooling"><br> Fig: Late Fusion with Pooling</div><p>Problem: Hard to compare low-level motion between frames.</p><h3 id="early-fusion" tabindex="-1"><a class="header-anchor" href="#early-fusion"><span>Early Fusion</span></a></h3><p><a href="https://ieeexplore.ieee.org/document/6909619" target="_blank" rel="noopener noreferrer">Large Scale Video Classification with Convolutional Neural Networks, CVPR 2014</a></p><div class="img-wrapper"><img src="'+l+'" width="50%" alt="Early Fusion"><br> Fig: Early Fusion</div><h3 id="_3d-cnn-slow-fusion" tabindex="-1"><a class="header-anchor" href="#_3d-cnn-slow-fusion"><span>3D CNN (Slow Fusion)</span></a></h3><p><a href="https://ieeexplore.ieee.org/document/6165309" target="_blank" rel="noopener noreferrer">Ji et al., 3D Convolutional Neural Networks for Human Action Recognition, TPAMI 2010</a></p><h3 id="comparison" tabindex="-1"><a class="header-anchor" href="#comparison"><span>Comparison</span></a></h3><div class="img-wrapper"><img src="'+c+'" width="65%" alt="Comparison"><br> Fig: Early Fusion vs Late Fusion vs 3D CNN</div><p>(In practice, we use much larger models than the ones shown in the figure above)</p><h4 id="_2d-conv-vs-3d-conv" tabindex="-1"><a class="header-anchor" href="#_2d-conv-vs-3d-conv"><span>2D Conv vs 3D Conv</span></a></h4><div class="img-wrapper"><img src="'+p+'" width="60%" alt="2D Conv vs 3D Conv"><br>Fig: 2D Conv vs 3D Conv</div><p>Problem: No temporal shift-invariance!</p><p>3D Conv filters are shift invariant since each filter slides over time.</p><p>Visualization of the first layer filters of a 3D temporal convnet: <a href="https://ieeexplore.ieee.org/document/6909619" target="_blank" rel="noopener noreferrer">Large-scale Video Classification with Convolutional Neural Networks, CVPR 2014</a></p><div class="img-wrapper"><img src="'+d+'" width="60%" alt="3D Conv Filters"><br>Fig: 3D Conv Filters</div><h4 id="example-video-dataset-sports-1m" tabindex="-1"><a class="header-anchor" href="#example-video-dataset-sports-1m"><span>Example Video Dataset: Sports-1M</span></a></h4><p>1M YouTube videos of sports events. 487 classes.</p><div class="img-wrapper"><img src="'+h+'" width="40%" alt="Sports-1M"><br>Fig: Sports-1M Top-5 Accuracy (in 2014)</div><p>Now 3D CNN architectures are much better.</p><h3 id="c3d-architecture" tabindex="-1"><a class="header-anchor" href="#c3d-architecture"><span>C3D Architecture</span></a></h3><p><a href="https://arxiv.org/abs/1412.0767" target="_blank" rel="noopener noreferrer">Tran et al., Learning Spatiotemporal Features with 3D Convolutional Networks, ICCV 2015</a></p><p>&quot;The VGG of 3D ConvNets&quot;</p><p>Problem: 3x3x3 conv is very computationally expensive.</p><ul><li>AlexNet: 0.7 GFLOP</li><li>VGG-16: 13.6 GFLOP</li><li>C3D: 39.5 GFLOP (2.9x VGG!)</li></ul><p>Insights: We need to treat time and space differently.</p><h2 id="two-stream-networks" tabindex="-1"><a class="header-anchor" href="#two-stream-networks"><span>Two-Stream Networks</span></a></h2><p><a href="https://link.springer.com/article/10.3758/BF03212378" target="_blank" rel="noopener noreferrer">Johansson, Visual Perception of Biological Motion and a Model for Its Analysis, Perception &amp; Psychophysics 1973</a></p><p>Human&#39;s brain is treating motion differently from static images. We do not need to see the pixels to recognize actions.</p><h3 id="optical-flow" tabindex="-1"><a class="header-anchor" href="#optical-flow"><span>Optical Flow</span></a></h3><p>Image at frame t and t+1: Optical flow is a 2D vector field that represents the motion of pixels between the two frames.</p><p>Two-Stream Networks: <a href="https://arxiv.org/abs/1406.2199" target="_blank" rel="noopener noreferrer">Simonyan and Zisserman, Two-Stream Convolutional Networks for Action Recognition in Videos, NIPS 2014</a></p><div class="img-wrapper"><img src="'+m+'" width="70%" alt="Two-Stream Networks"><br>Fig: Two-Stream Networks</div><p>At test time we take an average of the predictions of the two streams.</p><p><strong>Results</strong>(2014)</p><div class="img-wrapper"><img src="'+g+'" width="50%" alt="Two-Stream Networks Results"><br>Fig: Two-Stream Networks Results</div><h2 id="recurrent-structures" tabindex="-1"><a class="header-anchor" href="#recurrent-structures"><span>Recurrent Structures</span></a></h2><p>Use recurrent neural networks (RNNs) to model long-term temporal structure.</p><p>in 2011: way ahead of its time!</p><p><a href="https://link.springer.com/chapter/10.1007/978-3-642-25446-8_4" target="_blank" rel="noopener noreferrer">Baccouche et al, Sequential Deep Learning for Human Action Recognition, 2011</a></p><p><a href="https://arxiv.org/abs/1411.4389" target="_blank" rel="noopener noreferrer">Donahue et al, Long-term Recurrent Convolutional Networks for Visual Recognition and Description, CVPR 2015</a></p><p>We can use a similar structure to Multi-layer RNN to process videos.</p><p><a href="https://arxiv.org/abs/1511.06432" target="_blank" rel="noopener noreferrer">Ballas et al, Delving Deeper into Convolutional Networks for Learning Video, ICLR 2016</a></p><p>Recurrent CNN: Infinite temporal extent (convolutional)</p><p>Problem: RNNs are slow for long sequences.</p><h3 id="spatio-temporal-self-attention-nonlocal-block" tabindex="-1"><a class="header-anchor" href="#spatio-temporal-self-attention-nonlocal-block"><span>Spatio-Temporal Self Attention (Nonlocal Block)</span></a></h3><p><a href="https://arxiv.org/abs/1711.07971" target="_blank" rel="noopener noreferrer">Wang et al, Non-local Neural Networks, CVPR 2018</a></p><div class="img-wrapper"><img src="'+u+'" width="50%" alt="Nonlocal Block"><br>Fig: Nonlocal Block</div><h3 id="inflating-2d-networks-to-3d" tabindex="-1"><a class="header-anchor" href="#inflating-2d-networks-to-3d"><span>Inflating 2D Networks to 3D</span></a></h3><p><a href="https://arxiv.org/abs/1705.07750" target="_blank" rel="noopener noreferrer">Carreira and Zisserman, Quo Vadis, Action Recognition? A New Model and the Kinetics Dataset, CVPR 2017</a></p><p>Inception-style architecture for 3D convnets.</p><p>Can use weights from 2D conv to initialize 3D conv: copy K_t times in Space and divide by K_t. This gives the same result as 2D conv given &quot;constant&quot; video input.</p><h3 id="weightlifting" tabindex="-1"><a class="header-anchor" href="#weightlifting"><span>Weightlifting</span></a></h3><p><a href="https://arxiv.org/abs/1611.02155" target="_blank" rel="noopener noreferrer">Feichtenhofer et al, Spatiotemporal Residual Networks for Video Action Recognition, CVPR 2018</a></p><div class="img-wrapper"><img src="'+f+'" width="50%" alt="Weightlifting"><br>Fig: Weightlifting</div><h2 id="treating-time-and-space-differently-slowfast-networks" tabindex="-1"><a class="header-anchor" href="#treating-time-and-space-differently-slowfast-networks"><span>Treating time and space differently: SlowFast Networks</span></a></h2><p><a href="https://arxiv.org/abs/1812.03982" target="_blank" rel="noopener noreferrer">Feichtenhofer et al, SlowFast Networks for Video Recognition, ICCV 2019</a></p><div class="img-wrapper"><img src="'+v+'" width="50%" alt="SlowFast Networks"><br>Fig: SlowFast Networks</div><h2 id="other-task-spatial-temporal-detection" tabindex="-1"><a class="header-anchor" href="#other-task-spatial-temporal-detection"><span>Other task: Spatial-Temporal Detection</span></a></h2><p>Given a long untrimmed video, detect all the people in space and time and classify the activities they are performing.</p><p>Some examples from AVA dataset:</p><p><a href="https://arxiv.org/abs/1705.08421" target="_blank" rel="noopener noreferrer">Gu et al, AVA: A Video Dataset of Spatio-temporally Localized Atomic Visual Actions, CVPR 2018</a></p><h2 id="notice-on-usage-and-attribution" tabindex="-1"><a class="header-anchor" href="#notice-on-usage-and-attribution"><span><strong>Notice on Usage and Attribution</strong></span></a></h2><p>This note is based on the <strong>University of Michigan&#39;s publicly available course EECS 498.008 / 598.008</strong> and is intended <strong>solely for personal learning and academic discussion</strong>, with no commercial use.</p><ul><li><strong>Nature of the Notes:</strong> These notes include extensive references and citations from course materials to ensure clarity and completeness. However, they are presented as personal interpretations and summaries, not as substitutes for the original course content.</li><li><strong>Original Course Resources:</strong> Please refer to the official <a href="https://web.eecs.umich.edu/~justincj/teaching/eecs498/WI2022/" target="_blank" rel="noopener noreferrer"><strong>University of Michigan website</strong></a> for complete and accurate course materials.</li><li><strong>Third-Party Open Access Content:</strong> This note may reference Open Access (OA) papers or resources cited within the course materials. These materials are used under their original Open Access licenses (e.g., CC BY, CC BY-SA).</li><li><strong>Proper Attribution:</strong> Every referenced OA resource is appropriately cited, including the author, publication title, source link, and license type.</li><li><strong>Copyright Notice:</strong> All rights to third-party content remain with their respective authors or publishers.</li><li><strong>Content Removal:</strong> If you believe any content infringes on your copyright, please contact me, and I will promptly remove the content in question.</li></ul><p>Thanks to the <strong>University of Michigan</strong> and the contributors to the course for their openness and dedication to accessible education.</p>',93)])])}const y=t(w,[["render",b]]),k=JSON.parse('{"path":"/notes/um-cv/um-cv-18/","title":"18 Videos","lang":"en-US","frontmatter":{"title":"18 Videos","tags":["computer-vision"],"createTime":"2025/01/05 18:30:39","permalink":"/notes/um-cv/um-cv-18/","description":"Summary: Video Classification, CNN Architectures for Videos, Two-Stream Networks, Recurrent Structures, Spatial-Temporal Detection, and more. @Credits: EECS 498.007 | Video Lect...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"18 Videos\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T17:44:17.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://saturntsen.github.io/notes/um-cv/um-cv-18/"}],["meta",{"property":"og:site_name","content":"SaturnTsen"}],["meta",{"property":"og:title","content":"18 Videos"}],["meta",{"property":"og:description","content":"Summary: Video Classification, CNN Architectures for Videos, Two-Stream Networks, Recurrent Structures, Spatial-Temporal Detection, and more. @Credits: EECS 498.007 | Video Lect..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-21T17:44:17.000Z"}],["meta",{"property":"article:tag","content":"computer-vision"}],["meta",{"property":"article:modified_time","content":"2025-02-21T17:44:17.000Z"}]]},"readingTime":{"minutes":4.35,"words":1306},"git":{"createdTime":1736108922000,"updatedTime":1740159857000,"contributors":[{"name":"SaturnTsen","username":"SaturnTsen","email":"minger233@outlook.com","commits":3,"avatar":"https://avatars.githubusercontent.com/SaturnTsen?v=4","url":"https://github.com/SaturnTsen"}]},"autoDesc":true,"filePathRelative":"notes/UM-CV/UM-CV 18 Videos.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"31a781","sort":10004,"name":"UM-CV"}]}');export{y as comp,k as data};
