import{_ as d,c as u,d as t,b as r,w as i,r as o,o as a,e as n}from"./app-BPmJL-vo.js";const m={};function f(s,l){const e=o("VPLink");return a(),u("div",null,[l[66]||(l[66]=t("p",null,"This is a collection of solved LeetCode problems.",-1)),l[67]||(l[67]=t("h2",{id:"table-of-contents",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#table-of-contents"},[t("span",null,"Table of Contents")])],-1)),l[68]||(l[68]=t("h3",{id:"basic-algorithms",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#basic-algorithms"},[t("span",null,"Basic Algorithms")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./basic.md"},{default:i(()=>[...l[0]||(l[0]=[n("Basic",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Array.md"},{default:i(()=>[...l[1]||(l[1]=[n("Array",-1)])]),_:1})]),t("li",null,[r(e,{href:"./BitManipulation.md"},{default:i(()=>[...l[2]||(l[2]=[n("Bit Manipulation",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SlidingWindow.md"},{default:i(()=>[...l[3]||(l[3]=[n("Sliding Window",-1)])]),_:1})]),t("li",null,[r(e,{href:"./TwoPointers.md"},{default:i(()=>[...l[4]||(l[4]=[n("Two Pointers",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Intervals.md"},{default:i(()=>[...l[5]||(l[5]=[n("Intervals",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Matrix.md"},{default:i(()=>[...l[6]||(l[6]=[n("Matrix",-1)])]),_:1})]),t("li",null,[r(e,{href:"./others.md"},{default:i(()=>[...l[7]||(l[7]=[n("Others",-1)])]),_:1})])]),l[69]||(l[69]=t("h3",{id:"basic-data-structures",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#basic-data-structures"},[t("span",null,"Basic Data Structures")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./HashMap.md"},{default:i(()=>[...l[8]||(l[8]=[n("Hash Table",-1)])]),_:1})]),t("li",null,[r(e,{href:"./LinkedList.md"},{default:i(()=>[...l[9]||(l[9]=[n("Linked List",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Tree.md"},{default:i(()=>[...l[10]||(l[10]=[n("Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./stack.md"},{default:i(()=>[...l[11]||(l[11]=[n("Stack",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Queue.md"},{default:i(()=>[...l[12]||(l[12]=[n("Queue",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Graph.md"},{default:i(()=>[...l[13]||(l[13]=[n("Graph",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Heap.md"},{default:i(()=>[...l[14]||(l[14]=[n("Heap",-1)])]),_:1})])]),l[70]||(l[70]=t("h3",{id:"intermediate-algorithms",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#intermediate-algorithms"},[t("span",null,"Intermediate Algorithms")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./Backtracking.md"},{default:i(()=>[...l[15]||(l[15]=[n("Backtracking",-1)])]),_:1})]),t("li",null,[r(e,{href:"./TopologicalSort.md"},{default:i(()=>[...l[16]||(l[16]=[n("Topological Sort",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Greedy.md"},{default:i(()=>[...l[17]||(l[17]=[n("Greedy",-1)])]),_:1})]),t("li",null,[r(e,{href:"./DivideAndConquer.md"},{default:i(()=>[...l[18]||(l[18]=[n("Divide and Conquer",-1)])]),_:1})]),t("li",null,[r(e,{href:"./DP.md"},{default:i(()=>[...l[19]||(l[19]=[n("Dynamic Programming",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Pruning.md"},{default:i(()=>[...l[20]||(l[20]=[n("Pruning",-1)])]),_:1})])]),l[71]||(l[71]=t("h3",{id:"intermediate-data-structures",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#intermediate-data-structures"},[t("span",null,"Intermediate Data Structures")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./PriorityQueue.md"},{default:i(()=>[...l[21]||(l[21]=[n("Priority Queue",-1)])]),_:1})]),t("li",null,[r(e,{href:"./UnionFind.md"},{default:i(()=>[...l[22]||(l[22]=[n("Union Find",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Trie.md"},{default:i(()=>[...l[23]||(l[23]=[n("Trie",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SegmentTree.md"},{default:i(()=>[...l[24]||(l[24]=[n("Segment Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./BST.md"},{default:i(()=>[...l[25]||(l[25]=[n("Binary Search",-1)])]),_:1})]),t("li",null,[r(e,{href:"./ManacherAlgorithm.md"},{default:i(()=>[...l[26]||(l[26]=[n("Manacher's Algorithm",-1)])]),_:1})])]),l[72]||(l[72]=t("h3",{id:"advanced-algorithms",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#advanced-algorithms"},[t("span",null,"Advanced Algorithms")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./FenwickTree.md"},{default:i(()=>[...l[27]||(l[27]=[n("Fenwick Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./RedBlackTree.md"},{default:i(()=>[...l[28]||(l[28]=[n("Red-Black Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./AVLTree.md"},{default:i(()=>[...l[29]||(l[29]=[n("AVL Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./BTree.md"},{default:i(()=>[...l[30]||(l[30]=[n("B-Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SuffixArray.md"},{default:i(()=>[...l[31]||(l[31]=[n("Suffix Array",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SuffixTree.md"},{default:i(()=>[...l[32]||(l[32]=[n("Suffix Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./KMP.md"},{default:i(()=>[...l[33]||(l[33]=[n("KMP",-1)])]),_:1})]),t("li",null,[r(e,{href:"./AhoCorasickAutomaton.md"},{default:i(()=>[...l[34]||(l[34]=[n("Aho-Corasick Automaton",-1)])]),_:1})]),t("li",null,[r(e,{href:"./RabinKarp.md"},{default:i(()=>[...l[35]||(l[35]=[n("Rabin-Karp",-1)])]),_:1})]),t("li",null,[r(e,{href:"./ZAlgorithm.md"},{default:i(()=>[...l[36]||(l[36]=[n("Z Algorithm",-1)])]),_:1})]),t("li",null,[r(e,{href:"./RandomizedAlgorithm.md"},{default:i(()=>[...l[37]||(l[37]=[n("Randomized Algorithm",-1)])]),_:1})]),t("li",null,[r(e,{href:"./BloomFilter.md"},{default:i(()=>[...l[38]||(l[38]=[n("Bloom Filter",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SkipList.md"},{default:i(()=>[...l[39]||(l[39]=[n("Skip List",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SplayTree.md"},{default:i(()=>[...l[40]||(l[40]=[n("Splay Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Treap.md"},{default:i(()=>[...l[41]||(l[41]=[n("Treap",-1)])]),_:1})]),t("li",null,[r(e,{href:"./KDTree.md"},{default:i(()=>[...l[42]||(l[42]=[n("KD Tree",-1)])]),_:1})]),t("li",null,[r(e,{href:"./SuffixAutomaton.md"},{default:i(()=>[...l[43]||(l[43]=[n("Suffix Automaton",-1)])]),_:1})]),t("li",null,[r(e,{href:"./HeavyLightDecomposition.md"},{default:i(()=>[...l[44]||(l[44]=[n("Heavy-Light Decomposition",-1)])]),_:1})]),t("li",null,[r(e,{href:"./CentroidDecomposition.md"},{default:i(()=>[...l[45]||(l[45]=[n("Centroid Decomposition",-1)])]),_:1})]),t("li",null,[r(e,{href:"./DancingLinks.md"},{default:i(()=>[...l[46]||(l[46]=[n("Dancing Links",-1)])]),_:1})]),t("li",null,[r(e,{href:"./BipartiteMatching.md"},{default:i(()=>[...l[47]||(l[47]=[n("Bipartite Matching",-1)])]),_:1})]),t("li",null,[r(e,{href:"./FlowNetwork.md"},{default:i(()=>[...l[48]||(l[48]=[n("Flow Network",-1)])]),_:1})])]),l[73]||(l[73]=t("h3",{id:"linear-programming",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#linear-programming"},[t("span",null,"Linear Programming")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./Simplex.md"},{default:i(()=>[...l[49]||(l[49]=[n("Simplex",-1)])]),_:1})]),t("li",null,[r(e,{href:"./InteriorPoint.md"},{default:i(()=>[...l[50]||(l[50]=[n("Interior Point",-1)])]),_:1})])]),l[74]||(l[74]=t("h3",{id:"flow-and-cut",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#flow-and-cut"},[t("span",null,"Flow and Cut")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./MinimumCostFlow.md"},{default:i(()=>[...l[51]||(l[51]=[n("Minimum Cost Flow",-1)])]),_:1})]),t("li",null,[r(e,{href:"./NetworkFlow.md"},{default:i(()=>[...l[52]||(l[52]=[n("Network Flow",-1)])]),_:1})]),t("li",null,[r(e,{href:"./MaximumFlow.md"},{default:i(()=>[...l[53]||(l[53]=[n("Maximum Flow",-1)])]),_:1})]),t("li",null,[r(e,{href:"./MinimumCut.md"},{default:i(()=>[...l[54]||(l[54]=[n("Minimum Cut",-1)])]),_:1})])]),l[75]||(l[75]=t("h3",{id:"game-theory",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#game-theory"},[t("span",null,"Game Theory")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./GameTheory.md"},{default:i(()=>[...l[55]||(l[55]=[n("Game Theory",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Minimax.md"},{default:i(()=>[...l[56]||(l[56]=[n("Minimax",-1)])]),_:1})]),t("li",null,[r(e,{href:"./AlphaBetaPruning.md"},{default:i(()=>[...l[57]||(l[57]=[n("Alpha-Beta Pruning",-1)])]),_:1})])]),l[76]||(l[76]=t("h3",{id:"math",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#math"},[t("span",null,"Math")])],-1)),t("ul",null,[t("li",null,[r(e,{href:"./Math.md"},{default:i(()=>[...l[58]||(l[58]=[n("Math",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Prime.md"},{default:i(()=>[...l[59]||(l[59]=[n("Prime",-1)])]),_:1})]),t("li",null,[r(e,{href:"./NumberTheory.md"},{default:i(()=>[...l[60]||(l[60]=[n("Number Theory",-1)])]),_:1})]),t("li",null,[r(e,{href:"./ConvexHull.md"},{default:i(()=>[...l[61]||(l[61]=[n("Convex Hull",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Combinatorics.md"},{default:i(()=>[...l[62]||(l[62]=[n("Combinatorics",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Probability.md"},{default:i(()=>[...l[63]||(l[63]=[n("Probability",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Geometry.md"},{default:i(()=>[...l[64]||(l[64]=[n("Geometry",-1)])]),_:1})]),t("li",null,[r(e,{href:"./Cryptography.md"},{default:i(()=>[...l[65]||(l[65]=[n("Cryptography",-1)])]),_:1})])])])}const g=d(m,[["render",f]]),T=JSON.parse('{"path":"/notes/leetcode/","title":"LeetCode","lang":"en-US","frontmatter":{"title":"LeetCode","createTime":"2024/12/19 13:23:10","permalink":"/notes/leetcode/","description":"This is a collection of solved LeetCode problems. Basic Algorithms Basic Data Structures Intermediate Algorithms Intermediate Data Structures Advanced Algorithms Linear Programm...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LeetCode\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-24T21:00:16.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://saturntsen.github.io/notes/leetcode/"}],["meta",{"property":"og:site_name","content":"SaturnTsen"}],["meta",{"property":"og:title","content":"LeetCode"}],["meta",{"property":"og:description","content":"This is a collection of solved LeetCode problems. Basic Algorithms Basic Data Structures Intermediate Algorithms Intermediate Data Structures Advanced Algorithms Linear Programm..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-24T21:00:16.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-24T21:00:16.000Z"}]]},"readingTime":{"minutes":0.74,"words":222},"git":{"createdTime":1734612748000,"updatedTime":1740430816000,"contributors":[{"name":"SaturnTsen","username":"SaturnTsen","email":"minger233@outlook.com","commits":3,"avatar":"https://avatars.githubusercontent.com/SaturnTsen?v=4","url":"https://github.com/SaturnTsen"}]},"autoDesc":true,"filePathRelative":"notes/leetcode/README.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"ebb9cd","sort":10002,"name":"leetcode"}]}');export{g as comp,T as data};
