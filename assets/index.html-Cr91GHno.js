import{_ as d,c as r,d as i,a as t,e as a,b as n,w as p,r as l,o as c}from"./app-BPmJL-vo.js";const o={};function k(g,s){const h=l("VPLink"),e=l("VPIcon");return c(),r("div",null,[s[5]||(s[5]=i("p",null,"本篇记录自使用服务器集群以来，踩过的无数坑，熬过的无数个夜，最后总结出来一份环境配置宝典，希望能帮助到后来者。",-1)),s[6]||(s[6]=i("h2",{id:"网络代理",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#网络代理"},[i("span",null,"网络代理")])],-1)),i("p",null,[s[1]||(s[1]=a("此处详见",-1)),n(h,{href:"network-proxy.md"},{default:p(()=>[...s[0]||(s[0]=[a("网络代理配置",-1)])]),_:1})]),s[7]||(s[7]=t(`<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setproxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="conda-配置" tabindex="-1"><a class="header-anchor" href="#conda-配置"><span>Conda 配置</span></a></h2><p>conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。它的特点是无需 root 权限，即可创建一整套Python环境和各种编译工具链集合。</p><h3 id="安装conda" tabindex="-1"><a class="header-anchor" href="#安装conda"><span>安装conda</span></a></h3><p>前往<a href="https://repo.anaconda.com/" target="_blank" rel="noopener noreferrer">repo.anaconda.com</a>查找最新的安装包。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">wget</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">bash</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Miniconda3-latest-Linux-x86_64.sh</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Miniconda3-latest-Linux-x86_64.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>激活环境。激活后，重启终端。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">find</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -name</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">conda</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>conda env list</code></td><td>列出所有 Conda 环境</td></tr><tr><td><code>conda create -n [name] python=3.8.* -y</code></td><td>创建名为 <code>name</code> 的环境，Python 版本为 3.8</td></tr><tr><td><code>conda env remove -n [name]</code></td><td>删除名为 <code>name</code> 的环境</td></tr><tr><td><code>conda activate [name]</code></td><td>激活名为 <code>name</code> 的环境</td></tr><tr><td><code>conda deactivate</code></td><td>退出当前环境</td></tr><tr><td><code>conda list</code></td><td>列出当前环境的所有包</td></tr></tbody></table><p><strong>配置国内镜像</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 删除 defaults</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/pkgs/main</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/pkgs/free</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/pkgs/r</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/pkgs/pro</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://repo.anaconda.com/pkgs/msys2</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 添加清华镜像</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channels</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> show_channel_urls</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="高级配置" tabindex="-1"><a class="header-anchor" href="#高级配置"><span>高级配置</span></a></h3><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>conda config --show</code></td><td>显示当前的 Conda 配置</td></tr><tr><td><code>conda config --describe [key]</code></td><td>显示配置的详细信息</td></tr><tr><td><code>conda config --show channels</code></td><td>显示当前配置的所有 channels</td></tr></tbody></table><h4 id="channel-优先级" tabindex="-1"><a class="header-anchor" href="#channel-优先级"><span><span style="color:red;">channel 优先级</span></span></a></h4><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>conda config --add channels [channel_url]</code></td><td>添加channel</td></tr><tr><td><code>conda config --set channel_priority strict</code></td><td>设置 channel 优先级为严格模式</td></tr><tr><td><code>conda config --set channel_priority flexible</code></td><td>设置 channel 优先级为灵活模式</td></tr></tbody></table><p>当多个 channel 都有相同的包时，conda 需要解决冲突。</p><p>默认情况下，conda 会优先选择来自高优先级 channel 的包，而不是低优先级 channel 的包。因此，您可以将其他 channel 放在列表的底部，以提供默认 channel 中没有的包，同时也能保证这些 channel 不会覆盖核心包。</p><p>Conda 会收集所有列出 channel 中具有相同名称的包，并按以下方式处理：</p><ol><li>按 channel 优先级从高到低排序包。</li><li>对于具有相同 channel 优先级的包，按版本号从高到低排序。例如，如果 channelA 包含 NumPy 1.12.0 和 1.13.1，NumPy 1.13.1 将排在更高的位置。</li><li>对于仍然相同的包，按构建号从高到低排序。例如，如果 channelA 包含 NumPy 1.12.0 构建 1 和构建 2，构建 2 排在最前面。channelB 中的任何包都将排在 channelA 中的包之后。</li><li>安装满足安装规范的排序列表中的第一个包。</li></ol><p>例如，假设有两个 channel：channelA 和 channelB， 均包含 NumPy 1.12.1 和 1.13_1。channelA 的优先级高于 channelB。</p>`,21)),i("p",null,[s[2]||(s[2]=a("则解析顺序是：channelA",-1)),n(e,{provider:"iconify",name:"numpy-1.13_1",extra:"channel-a a"}),s[3]||(s[3]=a("numpy-1.12.1_1 > channelA",-1)),n(e,{provider:"iconify",name:"numpy-1.12.1_0",extra:"channel-b b"}),s[4]||(s[4]=a("numpy-1.13_1",-1))]),s[8]||(s[8]=t(`<h4 id="严格模式" tabindex="-1"><a class="header-anchor" href="#严格模式"><span>严格模式</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --set</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> channel_priority</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> strict</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>channel_priority (通道优先级) 有三个选项：&#39;strict&#39;、&#39;flexible&#39;和 &#39;disabled&#39;。默认 &#39;flexible&#39;。</p><ul><li>在严格模式下，高优先级通道中的包会优先被选中，低优先级通道中的同名包不会被考虑。</li><li>在灵活模式下，解决器可能会选择低优先级通道中的包来满足依赖关系，而不是报错。</li><li>在禁用模式下，优先选择包版本，通道优先级仅在版本相同时起作用。</li></ul><h3 id="best-practice" tabindex="-1"><a class="header-anchor" href="#best-practice"><span>Best Practice</span></a></h3><h4 id="推荐channel配置" tabindex="-1"><a class="header-anchor" href="#推荐channel配置"><span>推荐channel配置</span></a></h4><p>nvidia、pytorch的包时常起冲突，建议将 nvidia 的 channel 放在 pytorch 的 channel 之前。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 示例 .condarc</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">channel_priority:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> strict</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      # 强制优先级严格匹配频道顺序</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">channels:</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                   # 最高优先级：PyTorch 官方库（必须的版本）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nvidia</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                    # 第二优先级：NVIDIA CUDA 相关库</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> conda-forge</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">               # 第三优先级：灵活更新的第三方包</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> defaults</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">                  # 最低优先级：稳定但有时过时的官方源</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="必要时强制override" tabindex="-1"><a class="header-anchor" href="#必要时强制override"><span>必要时强制override</span></a></h4><p>示例：安装 PyTorch 并强制匹配 CUDA 版本</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">conda</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchvision</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> torchaudio</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pytorch-cuda=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">12.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Args:</p><ul><li><p><code>-c, --channel</code></p><p>指定额外的包搜索通道。这些通道按给定顺序搜索，可以是 URL、本地目录（使用 &#39;file://&#39; 语法）或简单路径（如 &#39;/home/conda/mychan&#39; 或 &#39;../mychan&#39;）。然后，搜索默认或 .condarc 中的通道（除非使用了 --override-channels）。可以使用 &#39;defaults&#39; 来获取 conda 的默认包。还可以使用任何名称，.condarc 的 channel_alias 值将被预先添加。默认的 channel_alias 是 https://conda.anaconda.org/。</p></li><li><p><code>--use-local</code></p><p>使用本地构建的包。等同于 &#39;-c local&#39;。</p></li><li><p><code>--override-channels</code></p><p>不搜索默认或 .condarc 里的通道。需要显式指定 --channel。</p></li></ul><p><span style="color:red;">巨坑：<code>-c</code> 指定的channel会添加在<code>.condarc</code>的channel的后面，所以我们在安装某些特定版本时一定注意要<code>--override-channels</code>！</span></p><p>例如下面安装<code>nvidia</code>的指定cu116版本cuda-toolkit时，如果不手动override，就会被强制装上最新版！</p><p><span style="color:red;">血的教训：装包按y确认之前一定看好哪些包被覆盖，尤其注意有没有影响cuda及其环境的包！</span></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p><strong>配置conda的步骤</strong></p><ol><li>安装conda</li><li>初始化终端，重启</li><li>配置国内镜像</li></ol><p><strong>关于channel优先级</strong></p><ol><li>配置<code>.condarc</code>优先级</li><li>必要时强制override</li></ol>`,21))])}const m=d(o,[["render",k]]),A=JSON.parse('{"path":"/notes/misc/conda-env-config/","title":"conda 使用指南","lang":"en-US","frontmatter":{"title":"conda 使用指南","createTime":"2024/01/11 16:36:01","permalink":"/notes/misc/conda-env-config/","outline":[2,4],"description":"本篇记录自使用服务器集群以来，踩过的无数坑，熬过的无数个夜，最后总结出来一份环境配置宝典，希望能帮助到后来者。 网络代理 此处详见 Conda 配置 conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。它的特点是无需 root 权限，即可创建一整套Python环境和各种编译工具链集合。 安装...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"conda 使用指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-25T01:27:38.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://saturntsen.github.io/notes/misc/conda-env-config/"}],["meta",{"property":"og:site_name","content":"SaturnTsen"}],["meta",{"property":"og:title","content":"conda 使用指南"}],["meta",{"property":"og:description","content":"本篇记录自使用服务器集群以来，踩过的无数坑，熬过的无数个夜，最后总结出来一份环境配置宝典，希望能帮助到后来者。 网络代理 此处详见 Conda 配置 conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。它的特点是无需 root 权限，即可创建一整套Python环境和各种编译工具链集合。 安装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-25T01:27:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-25T01:27:38.000Z"}]]},"readingTime":{"minutes":4.48,"words":1343},"git":{"createdTime":1740430816000,"updatedTime":1740446858000,"contributors":[{"name":"SaturnTsen","username":"SaturnTsen","email":"minger233@outlook.com","commits":2,"avatar":"https://avatars.githubusercontent.com/SaturnTsen?v=4","url":"https://github.com/SaturnTsen"}]},"autoDesc":true,"filePathRelative":"notes/misc/conda environment configuration.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"133904","sort":10001,"name":"misc"}]}');export{m as comp,A as data};
