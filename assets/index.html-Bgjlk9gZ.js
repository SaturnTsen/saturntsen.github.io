import{_ as n,c as o,d as t,o as r}from"./app-BPmJL-vo.js";const a={};function i(s,e){return r(),o("div",null,[...e[0]||(e[0]=[t("p",null,"在完成FCOS目标检测项目中，我发现在训练过程中GPU利用率非常低，反倒是CPU利用率高。 而训练过程中所有的数据的确是在VRAM上的。通过排查发现，只有第一个batch的获取消耗 了大量的时间，于是推断是CPython解释器的GIL(Global Interpreter Lock)和Windows创建 子进程的方式(spawn)导致的数据Class的__init__方法中重复IO和pickle json导致的性能 瓶颈。",-1),t("p",null,"解决方案：",-1),t("ol",null,[t("li",null,"关闭Windows自动开启的Core Parking，强制开启所有CPU核心。"),t("li",null,"设置perprocess=True，这样即使在Windows下使用spawn的方式创建子进程，也能够保证 每个子进程都是持久化的，在一个epoch结束后不会重复IO和pickle json。")],-1),t("p",null,"这里记录一下GIL的相关知识。",-1)])])}const l=n(a,[["render",i]]),p=JSON.parse('{"path":"/notes/misc/global-interpreter-lock-in-cpython/","title":"GIL in CPython","lang":"en-US","frontmatter":{"title":"GIL in CPython","tags":["misc"],"createTime":"2024/01/22 18:38:50","permalink":"/notes/misc/global-interpreter-lock-in-cpython/","description":"在完成FCOS目标检测项目中，我发现在训练过程中GPU利用率非常低，反倒是CPU利用率高。 而训练过程中所有的数据的确是在VRAM上的。通过排查发现，只有第一个batch的获取消耗 了大量的时间，于是推断是CPython解释器的GIL(Global Interpreter Lock)和Windows创建 子进程的方式(spawn)导致的数据Class的...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GIL in CPython\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T10:32:27.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://saturntsen.github.io/notes/misc/global-interpreter-lock-in-cpython/"}],["meta",{"property":"og:site_name","content":"SaturnTsen"}],["meta",{"property":"og:title","content":"GIL in CPython"}],["meta",{"property":"og:description","content":"在完成FCOS目标检测项目中，我发现在训练过程中GPU利用率非常低，反倒是CPU利用率高。 而训练过程中所有的数据的确是在VRAM上的。通过排查发现，只有第一个batch的获取消耗 了大量的时间，于是推断是CPython解释器的GIL(Global Interpreter Lock)和Windows创建 子进程的方式(spawn)导致的数据Class的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-21T10:32:27.000Z"}],["meta",{"property":"article:tag","content":"misc"}],["meta",{"property":"article:modified_time","content":"2025-02-21T10:32:27.000Z"}]]},"readingTime":{"minutes":0.77,"words":232},"git":{"createdTime":1736090482000,"updatedTime":1740133947000,"contributors":[{"name":"SaturnTsen","username":"SaturnTsen","email":"minger233@outlook.com","commits":2,"avatar":"https://avatars.githubusercontent.com/SaturnTsen?v=4","url":"https://github.com/SaturnTsen"}]},"autoDesc":true,"filePathRelative":"notes/misc/Global Interpreter Lock(GIL) in CPython.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"133904","sort":10001,"name":"misc"}]}');export{l as comp,p as data};
