import{_ as e,c as d,a as l,o as c}from"./app-BPmJL-vo.js";const i={};function t(a,o){return c(),d("div",null,[...o[0]||(o[0]=[l('<h2 id="系统级指令" tabindex="-1"><a class="header-anchor" href="#系统级指令"><span>系统级指令</span></a></h2><h3 id="启动过程" tabindex="-1"><a class="header-anchor" href="#启动过程"><span>启动过程</span></a></h3><ol><li><p><strong>启动内核</strong>：系统引导开始，加载操作系统的内核。</p></li><li><p><strong>运行init</strong>：<code>init</code> 是所有进程的起点，负责初始化系统。</p></li><li><p><strong>确定运行级别</strong>：</p><ul><li><code>0</code>：停机。</li><li><code>1</code>：单用户模式，仅 root 用户可以登录。</li><li><code>2</code>：多用户模式（无网络）。</li><li><code>3</code>：完全多用户模式（有网络）。</li><li><code>4</code>：保留。</li><li><code>5</code>：图形用户界面模式（GUI）。</li><li><code>6</code>：系统重启。</li><li>这些级别的配置存放在 <code>/etc/rc*.d</code> 目录中。</li></ul></li><li><p><strong>系统初始化</strong>：在内核加载后，系统进行初始化，如激活交换分区、检查磁盘、加载硬件模块等。</p></li><li><p><strong>建立终端</strong>：准备好终端进行用户登录。</p></li><li><p><strong>用户登录</strong>：用户进入系统并进行操作。</p></li></ol><h3 id="文件系统结构" tabindex="-1"><a class="header-anchor" href="#文件系统结构"><span>文件系统结构</span></a></h3><ol><li><strong>/boot</strong>：包含启动的核心文件，如内核、initrd 镜像等。</li><li><strong>/run</strong>：存储系统启动以来的临时信息，重启时清空。</li><li><strong>/lost+found</strong>：用于非法关机后自动恢复文件。</li><li><strong>/usr/src</strong>：存放内核源代码。</li><li><strong>/sbin</strong>：基本系统命令（如 <code>shutdown</code>、<code>reboot</code>）。</li><li><strong>/bin</strong>：系统命令（如 <code>ls</code>、<code>chmod</code>、<code>sh</code>）。</li><li><strong>/usr/bin</strong>：普通用户级的基础指令。</li><li><strong>/usr/sbin</strong>：root 用户管理程序（如 <code>httpd</code>、<code>netconfig</code>）。</li><li><strong>/lib</strong>：动态链接库，类似于 Windows 中的 DLL 文件。</li><li><strong>/opt</strong>：存放额外安装的用户级应用程序。</li><li><strong>/etc</strong>：存放系统配置文件。</li><li><strong>/srv</strong>：存放提供服务的用户数据。</li><li><strong>/tmp</strong>：临时文件目录。</li><li><strong>/var</strong>：存放日志、缓存等数据。</li><li><strong>/dev</strong>：外部设备文件。</li><li><strong>/media</strong>：自动挂载的设备（如 USB、光驱）。</li><li><strong>/mnt</strong>：用户临时挂载的文件系统。</li><li><strong>/proc</strong>：虚拟文件系统，存放当前内核和系统状态的信息。</li><li><strong>/home</strong>：普通用户的主目录。</li><li><strong>/root</strong>：root 用户的主目录。</li><li><strong>/selinux</strong>：Redhat/CentOS 特有的安全相关目录。</li><li><strong>/sys</strong>：集成了内核设备树的文件系统，提供与内核、进程、设备、伪终端相关的信息。</li></ol><h3 id="系统信息" tabindex="-1"><a class="header-anchor" href="#系统信息"><span>系统信息</span></a></h3><ol><li><p><strong>查看系统架构</strong>：</p><ul><li><code>arch</code>：显示机器的处理器架构。</li><li><code>uname -m</code>：显示机器的处理器架构。</li><li><code>uname -r</code>：显示正在使用的内核版本。</li></ul></li><li><p><strong>查看内核和CPU信息</strong>：</p><ul><li><code>cat /proc/version</code>：显示内核版本。</li><li><code>cat /proc/cpuinfo</code>：显示 CPU 信息。</li><li><code>cat /proc/meminfo</code>：显示内存使用情况。</li><li><code>cat /proc/interrupts</code>：显示中断信息。</li></ul></li><li><p><strong>查看其他系统信息</strong>：</p><ul><li><code>lspci -tv</code>：列出 PCI 设备。</li><li><code>lsusb -tv</code>：列出 USB 设备。</li><li><code>cat /proc/net/dev</code>：显示网络适配器和统计信息。</li><li><code>cat /proc/swaps</code>：显示哪些 swap 被使用。</li><li><code>cat /proc/mounts</code>：显示已挂载的文件系统。</li></ul></li><li><p><strong>查看日期和时间</strong>：</p><ul><li><code>date</code>：显示系统日期。</li><li><code>cal 2007</code>：显示 2007 年的日历。</li></ul></li></ol><h3 id="关机与重启" tabindex="-1"><a class="header-anchor" href="#关机与重启"><span>关机与重启</span></a></h3><ol><li><p><strong>关机和重启命令</strong>：</p><ul><li><code>init 0</code> 或 <code>telinit 0</code>：关闭系统。</li><li><code>shutdown -h hours:minutes</code>：按预定时间关闭系统。</li><li><code>shutdown -r now</code>：立即重启系统。</li><li><code>reboot</code>：重启系统。</li><li><code>logout</code>：注销当前用户。</li></ul></li><li><p><strong>取消关机</strong>：</p><ul><li><code>shutdown -c</code>：取消按预定时间关闭系统。</li></ul></li><li><p><strong>建议操作</strong>：在关机、重启前运行 <code>sync</code> 命令以确保数据写入磁盘。</p></li></ol><p>注意：</p><ul><li>该部分已经逐步被systemd替代，shutdown实际是systemctl的symlink</li><li>halt/shutdown/poweroff前建议sync</li></ul><h3 id="挂载与卸载" tabindex="-1"><a class="header-anchor" href="#挂载与卸载"><span>挂载与卸载</span></a></h3><ol><li><p><strong>挂载命令</strong>：</p><ul><li><code>mount /dev/hda2 /mnt/hda2</code>：挂载一个名为 <code>hda2</code> 的硬盘。</li><li><code>mount -o loop file.iso /mnt/cdrom</code>：挂载一个 ISO 镜像文件。</li><li><code>mount -t vfat /dev/hda5 /mnt/hda5</code>：挂载一个 Windows FAT32 文件系统。</li></ul></li><li><p><strong>卸载命令</strong>：</p><ul><li><code>umount /dev/hda2</code>：卸载名为 <code>hda2</code> 的设备。</li><li><code>fuser -km /mnt/hda2</code>：强制卸载设备。</li></ul></li><li><p><strong>挂载其他设备</strong>：</p><ul><li><code>mount /dev/cdrom /mnt/cdrom</code>：挂载 CD-ROM。</li><li><code>mount /dev/sda1 /mnt/usbdisk</code>：挂载 USB 磁盘。</li></ul></li><li><p><strong>挂载 Windows 网络共享</strong>：</p><ul><li><code>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share</code>：挂载 Windows 网络共享目录。</li></ul></li></ol><h3 id="磁盘空间管理" tabindex="-1"><a class="header-anchor" href="#磁盘空间管理"><span>磁盘空间管理</span></a></h3><ol><li><p><strong>磁盘查询命令</strong>：</p><ul><li><code>df --help</code>：显示磁盘空间相关参数及帮助信息。</li><li><code>du</code>：查看文件或目录的磁盘使用情况。</li><li><code>lsblk</code>：显示磁盘分区的状态和挂载信息。</li><li><code>blkid</code>：显示设备的标识信息。</li></ul></li><li><p><strong>查看磁盘使用情况</strong>：</p><ul><li><code>df -h</code>：以易于阅读的格式显示已挂载分区的磁盘空间。</li><li><code>ls -lSr | more</code>：按文件大小排序并分页显示文件和目录。</li><li><code>du -sh dir1</code>：估算目录 <code>dir1</code> 使用的磁盘空间。</li><li><code>du -sk * | sort -rn</code>：按文件/目录大小显示，并按容量大小排序。</li></ul></li><li><p><strong>查看已安装软件包占用的空间</strong>：</p><ul><li>Fedora/RedHat 系统：<code>rpm -q -a --qf &#39;%10{SIZE}t%{NAME}n&#39; | sort -k1,1n</code>。</li><li>Debian/Ubuntu 系统：<code>dpkg-query -W -f=&#39;${Installed-Size;10}t${Package}n&#39; | sort -k1,1n</code>。</li></ul></li></ol><h3 id="文件系统分析与修复" tabindex="-1"><a class="header-anchor" href="#文件系统分析与修复"><span>文件系统分析与修复</span></a></h3><ol><li><p><strong>检查坏块</strong>：</p><ul><li><code>badblocks -v /dev/hda1</code>：检查磁盘 <code>hda1</code> 上的坏块。</li></ul></li><li><p><strong>文件系统检查与修复</strong>：</p><ul><li><code>fsck /dev/hda1</code>：修复或检查 <code>hda1</code> 上的 Linux 文件系统完整性。</li><li><code>fsck.ext2 /dev/hda1</code>：检查并修复 <code>ext2</code> 文件系统。</li><li><code>e2fsck /dev/hda1</code>：检查并修复 <code>ext2</code> 文件系统。</li><li><code>fsck.ext3 /dev/hda1</code>：检查并修复 <code>ext3</code> 文件系统。</li><li><code>fsck.vfat /dev/hda1</code>：检查并修复 <code>vfat</code> 文件系统。</li><li><code>fsck.msdos /dev/hda1</code>：检查并修复 <code>msdos</code> 文件系统。</li><li><code>dosfsck /dev/hda1</code>：检查并修复 <code>dos</code> 文件系统。</li></ul></li></ol><h3 id="文件系统初始化" tabindex="-1"><a class="header-anchor" href="#文件系统初始化"><span>文件系统初始化</span></a></h3><ol><li><strong>创建文件系统</strong>： <ul><li><code>mkfs /dev/hda1</code>：在 <code>hda1</code> 分区创建文件系统。</li><li><code>mke2fs /dev/hda1</code>：在 <code>hda1</code> 分区创建 <code>ext2</code> 文件系统。</li><li><code>mke2fs -j /dev/hda1</code>：在 <code>hda1</code> 分区创建 <code>ext3</code> 文件系统（支持日志）。</li><li><code>mkfs -t vfat32 -F /dev/hda1</code>：在 <code>hda1</code> 分区创建 FAT32 文件系统。</li><li><code>fdformat -n /dev/fd0</code>：格式化软盘。</li><li><code>mkswap /dev/hda3</code>：创建一个 swap 文件系统。</li></ul></li></ol><h3 id="swap-文件系统管理" tabindex="-1"><a class="header-anchor" href="#swap-文件系统管理"><span>SWAP 文件系统管理</span></a></h3><ol><li><strong>SWAP 创建与启用</strong>： <ul><li><code>mkswap /dev/hda3</code>：在 <code>hda3</code> 分区创建 swap 文件系统。</li><li><code>swapon /dev/hda3</code>：启用新的 swap 文件系统。</li><li><code>swapon /dev/hda2 /dev/hdb3</code>：启用多个 swap 分区。</li></ul></li></ol><h3 id="备份与恢复命令" tabindex="-1"><a class="header-anchor" href="#备份与恢复命令"><span>备份与恢复命令</span></a></h3><ol><li><p><strong>使用 <code>dump</code> 和 <code>restore</code> 备份和恢复文件系统</strong>：</p><ul><li><code>dump -0aj -f /tmp/home0.bak /home</code>：对 <code>/home</code> 目录进行完整备份，并将备份文件保存为 <code>/tmp/home0.bak</code>。</li><li><code>dump -1aj -f /tmp/home0.bak /home</code>：对 <code>/home</code> 目录进行增量备份，并将备份文件保存为 <code>/tmp/home0.bak</code>。</li><li><code>restore -if /tmp/home0.bak</code>：从备份文件 <code>/tmp/home0.bak</code> 恢复文件。</li></ul></li><li><p><strong>使用 <code>rsync</code> 进行目录同步</strong>：</p><ul><li><code>rsync -rogpav --delete /home /tmp</code>：同步 <code>/home</code> 目录到 <code>/tmp</code> 目录，并删除目标目录中不再存在的文件。</li><li><code>rsync -rogpav -e ssh --delete /home ip_address:/tmp</code>：通过 SSH 通道将 <code>/home</code> 目录同步到远程主机的 <code>/tmp</code> 目录。</li><li><code>rsync -az -e ssh --delete ip_addr:/home/public /home/local</code>：通过 SSH 和压缩将远程主机的 <code>/home/public</code> 目录同步到本地的 <code>/home/local</code> 目录。</li><li><code>rsync -az -e ssh --delete /home/local ip_addr:/home/public</code>：通过 SSH 和压缩将本地的 <code>/home/local</code> 目录同步到远程主机的 <code>/home/public</code> 目录。</li></ul></li><li><p><strong>使用 <code>dd</code> 进行磁盘备份与恢复</strong>：</p><ul><li><code>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &#39;dd of=hda.gz&#39;</code>：通过 SSH 远程备份本地磁盘 <code>/dev/hda</code> 到远程主机。</li><li><code>dd if=/dev/sda of=/tmp/file1</code>：将磁盘 <code>/dev/sda</code> 的内容备份到文件 <code>/tmp/file1</code>。</li></ul></li><li><p><strong>使用 <code>tar</code> 进行文件备份</strong>：</p><ul><li><code>tar -Puf backup.tar /home/user</code>：对 <code>/home/user</code> 目录进行交互式备份，并将备份保存为 <code>backup.tar</code>。</li><li><code>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &#39;cd /home/share/ &amp;&amp; tar x -p&#39;</code>：通过 SSH 在远程主机复制 <code>/tmp/local/</code> 目录的内容。</li><li><code>( tar c /home ) | ssh -C user@ip_addr &#39;cd /home/backup-home &amp;&amp; tar x -p&#39;</code>：通过 SSH 在远程主机复制本地的 <code>/home</code> 目录。</li><li><code>tar cf - . | (cd /tmp/backup ; tar xf - )</code>：将一个目录复制到另一个位置，保持原有权限和链接。</li></ul></li><li><p><strong>使用 <code>find</code> 与 <code>cp</code> 进行文件查找与复制</strong>：</p><ul><li><code>find /home/user1 -name &#39;*.txt&#39; | xargs cp -av --target-directory=/home/backup/ --parents</code>：查找 <code>/home/user1</code> 目录下的所有 <code>.txt</code> 文件并复制到 <code>/home/backup/</code> 目录。 - <code>find /var/log -name &#39;*.log&#39; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2</code>：查找所有以 <code>.log</code> 结尾的文件并 将其打包成 <code>.tar.bz2</code> 格式的压缩文件。</li></ul></li><li><p><strong>备份和恢复 MBR</strong>：</p><ul><li><code>dd if=/dev/hda of=/dev/fd0 bs=512 count=1</code>：将 MBR（主引导记录）内容复制到软盘。</li><li><code>dd if=/dev/fd0 of=/dev/hda bs=512 count=1</code>：从软盘恢复 MBR 内容到磁盘。</li></ul></li></ol><h3 id="网络连接相关命令" tabindex="-1"><a class="header-anchor" href="#网络连接相关命令"><span>网络连接相关命令</span></a></h3><ol><li><p><strong>网络接口配置与控制</strong>：</p><ul><li><code>ifconfig eth0</code>：显示以太网卡 <code>eth0</code> 的配置信息。</li><li><code>ifup eth0</code>：启用网络接口 <code>eth0</code>。</li><li><code>ifdown eth0</code>：禁用网络接口 <code>eth0</code>。</li><li><code>ifconfig eth0 192.168.1.1 netmask 255.255.255.0</code>：设置 <code>eth0</code> 网络接口的 IP 地址为 <code>192.168.1.1</code>，子网掩码为 <code>255.255.255.0</code>。</li><li><code>ifconfig eth0 promisc</code>：设置 <code>eth0</code> 网络接口为混杂模式，允许嗅探网络数据包。</li></ul></li><li><p><strong>DHCP配置</strong>：</p><ul><li><code>dhclient eth0</code>：以 DHCP 模式启用网络接口 <code>eth0</code>，自动获取 IP 地址。</li></ul></li><li><p><strong>路由配置</strong>：</p><ul><li><code>route -n</code>：显示路由表。</li><li><code>route add -net 0/0 gw IP_Gateway</code>：设置默认网关，<code>IP_Gateway</code> 为网关 IP 地址。</li><li><code>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1</code>：设置静态路 由，通过 <code>192.168.1.1</code> 网关访问 <code>192.168.0.0/16</code> 网络。</li><li><code>route del 0/0 gw IP_gateway</code>：删除默认路由。</li></ul></li><li><p><strong>启用 IP 转发</strong>：</p><ul><li><code>echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward</code>：启用 IP 转发，允许数据包在网络间转发。</li></ul></li><li><p><strong>主机名与域名解析</strong>：</p><ul><li><code>hostname</code>：显示当前系统的主机名。</li><li><code>host www.example.com</code>：查询域名 <code>www.example.com</code> 并解析其 IP 地址。</li><li><code>nslookup www.example.com</code>：查询域名 <code>www.example.com</code>，解析主机名到 IP 地 址，或将 IP 地址解析为主机名。</li></ul></li><li><p><strong>网络接口状态与统计信息</strong>：</p><ul><li><code>ip link show</code>：显示所有网络接口的链接状态。</li><li><code>mii-tool eth0</code>：查看网络接口 <code>eth0</code> 的链路状态。</li><li><code>ethtool eth0</code>：显示网络接口 <code>eth0</code> 的统计信息。</li></ul></li><li><p><strong>网络连接与监听</strong>：</p><ul><li><code>netstat -tup</code>：显示所有活动的网络连接及其对应的 PID。</li><li><code>netstat -tupl</code>：显示系统上所有监听的网络服务及其对应的 PID。</li></ul></li><li><p><strong>数据包嗅探</strong>：</p><ul><li><code>tcpdump tcp port 80</code>：显示所有 TCP 端口为 80 的 HTTP 流量。</li></ul></li><li><p><strong>无线网络相关命令</strong>：</p><ul><li><code>iwlist scan</code>：扫描可用的无线网络。</li><li><code>iwconfig eth1</code>：显示无线网卡 <code>eth1</code> 的配置信息。</li></ul></li><li><p><strong>主机名与域名解析</strong>：</p></li></ol><ul><li><code>hostname</code>：显示当前系统的主机名。</li><li><code>host www.example.com</code>：查询 <code>www.example.com</code> 域名并解析其对应的 IP 地址。</li><li><code>nslookup www.example.com</code>：查找域名 <code>www.example.com</code>，解析为 IP 地址，或 者将 IP 地址解析为主机名。</li></ul><ol start="11"><li><strong>WHOIS查询</strong>： <ul><li><code>whois www.example.com</code>：查询域名 <code>www.example.com</code> 的 WHOIS 信息。</li></ul></li></ol><p>以下是补充的关于光盘相关的命令：</p><h3 id="光盘操作命令" tabindex="-1"><a class="header-anchor" href="#光盘操作命令"><span>光盘操作命令</span></a></h3><ol><li><p><strong>清空光盘内容</strong>：</p><ul><li><code>cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force</code>：清空一个 可复写的光盘内容。</li></ul></li><li><p><strong>创建ISO镜像文件</strong>：</p><ul><li><code>mkisofs /dev/cdrom &gt; cd.iso</code>：在磁盘上创建一个光盘的ISO镜像文件。</li><li><code>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz</code>：创建一个压缩的光盘ISO镜像文件。</li><li><code>mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd</code>： 创建一个目录 <code>data_cd</code> 的ISO镜像文件，并设置ISO的一些参数。</li></ul></li><li><p><strong>刻录ISO镜像文件</strong>：</p><ul><li><code>cdrecord -v dev=/dev/cdrom cd.iso</code>：将ISO镜像文件 <code>cd.iso</code> 刻录到光盘。</li><li><code>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom -</code>：将压缩的ISO镜像文件 <code>cd_iso.gz</code> 刻录到光盘。</li></ul></li><li><p><strong>挂载ISO镜像文件</strong>：</p><ul><li><code>mount -o loop cd.iso /mnt/iso</code>：将ISO镜像文件 <code>cd.iso</code> 挂载到 <code>/mnt/iso</code> 目录。</li></ul></li><li><p><strong>转录音轨到wav文件</strong>：</p><ul><li><code>cd-paranoia -B</code>：从CD光盘转录音轨到wav文件中。</li><li><code>cd-paranoia -- &quot;-3&quot;</code>：从CD光盘转录音轨到wav文件中，使用参数 <code>-3</code>。</li></ul></li><li><p><strong>扫描SCSI总线识别光盘设备</strong>：</p><ul><li><code>cdrecord --scanbus</code>：扫描总线以识别SCSI光盘设备。</li></ul></li><li><p><strong>计算MD5校验值</strong>：</p><ul><li><code>dd if=/dev/hdc | md5sum</code>：计算设备 <code>/dev/hdc</code>（例如CD驱动器）内容的MD5校验和。</li></ul></li></ol><p>以下是有关 <strong>RPM 包</strong> 和 <strong>YUM 软件包管理</strong> 的命令：</p><h3 id="rpm-包管理命令-适用于-fedora、redhat-及类似系统" tabindex="-1"><a class="header-anchor" href="#rpm-包管理命令-适用于-fedora、redhat-及类似系统"><span><strong>RPM 包管理命令</strong> (适用于 Fedora、Redhat 及类似系统)</span></a></h3><ol><li><p><strong>安装、更新和删除 RPM 包</strong>：</p><ul><li><code>rpm -ivh package.rpm</code>：安装一个 RPM 包。</li><li><code>rpm -ivh --nodeeps package.rpm</code>：安装一个 RPM 包，并忽略依赖关系警告。</li><li><code>rpm -U package.rpm</code>：更新一个 RPM 包，但不改变其配置文件。</li><li><code>rpm -F package.rpm</code>：更新一个已安装的 RPM 包（必须已经安装）。</li><li><code>rpm -e package_name.rpm</code>：删除一个 RPM 包。</li></ul></li><li><p><strong>查询已安装的 RPM 包</strong>：</p><ul><li><code>rpm -qa</code>：列出系统中所有已安装的 RPM 包。</li><li><code>rpm -qa | grep httpd</code>：显示所有名称中包含 &quot;httpd&quot; 的 RPM 包。</li><li><code>rpm -qi package_name</code>：获取一个已安装包的详细信息。</li><li><code>rpm -qg &quot;System Environment/Daemons&quot;</code>：显示属于特定组件的 RPM 包。</li><li><code>rpm -ql package_name</code>：显示一个已安装的 RPM 包提供的文件列表。</li><li><code>rpm -qc package_name</code>：显示一个已安装的 RPM 包提供的配置文件列表。</li><li><code>rpm -q package_name --whatrequires</code>：显示与该 RPM 包存在依赖关系的其他包。</li><li><code>rpm -q package_name --whatprovides</code>：显示该 RPM 包提供的功能或文件。</li><li><code>rpm -q package_name --scripts</code>：显示安装或删除期间执行的脚本。</li><li><code>rpm -q package_name --changelog</code>：显示该 RPM 包的修改历史。</li></ul></li><li><p><strong>查询 RPM 包和文件</strong>：</p><ul><li><code>rpm -qf /etc/httpd/conf/httpd.conf</code>：确认某个文件由哪个 RPM 包提供。</li><li><code>rpm -qp package.rpm -l</code>：显示一个尚未安装的 RPM 包提供的文件列表。</li></ul></li><li><p><strong>验证和检查 RPM 包的完整性</strong>：</p><ul><li><code>rpm --import /media/cdrom/RPM-GPG-KEY</code>：导入公钥数字证书。</li><li><code>rpm --checksig package.rpm</code>：确认一个 RPM 包的签名和完整性。</li><li><code>rpm -qa gpg-pubkey</code>：确认已安装的所有 RPM 包的公钥完整性。</li><li><code>rpm -V package_name</code>：验证一个已安装的 RPM 包的文件完整性。</li><li><code>rpm -Va</code>：检查系统中所有已安装的 RPM 包。</li><li><code>rpm -Vp package.rpm</code>：验证一个 RPM 包是否已安装。</li></ul></li><li><p><strong>从 RPM 包提取文件</strong>：</p><ul><li><code>rpm2cpio package.rpm | cpio --extract --make-directories *bin*</code>：从一个 RPM 包中提取可执行文件。</li></ul></li><li><p><strong>RPM 源码包操作</strong>：</p><ul><li><code>rpm -ivh /usr/src/redhat/RPMS/</code>arch<code>/package.rpm</code>：从源码包安装一个已经构建好的 RPM 包。</li><li><code>rpmbuild --rebuild package_name.src.rpm</code>：重新构建一个 RPM 包。</li></ul></li></ol><hr><h3 id="yum-软件包管理命令-适用于-fedora、redhat-及类似系统" tabindex="-1"><a class="header-anchor" href="#yum-软件包管理命令-适用于-fedora、redhat-及类似系统"><span><strong>YUM 软件包管理命令</strong> (适用于 Fedora、Redhat 及类似系统)</span></a></h3><ol><li><p><strong>安装、更新和删除软件包</strong>：</p><ul><li><code>yum install package_name</code>：下载并安装一个 RPM 包。</li><li><code>yum localinstall package_name.rpm</code>：安装本地 RPM 包，并解决依赖关系。</li><li><code>yum update package_name.rpm</code>：更新系统中所有安装的 RPM 包。</li><li><code>yum update package_name</code>：更新一个指定的 RPM 包。</li><li><code>yum remove package_name</code>：删除一个 RPM 包。</li></ul></li><li><p><strong>列出和搜索软件包</strong>：</p><ul><li><code>yum list</code>：列出当前系统中安装的所有包。</li><li><code>yum search package_name</code>：在 YUM 仓库中搜索软件包。</li></ul></li><li><p><strong>清理和管理缓存</strong>：</p><ul><li><code>yum clean packages</code>：清理 RPM 缓存，删除下载的包。</li><li><code>yum clean headers</code>：删除所有头文件。</li><li><code>yum clean all</code>：删除所有缓存的包和头文件。</li></ul></li></ol>',36)])])}const r=e(i,[["render",t]]),n=JSON.parse('{"path":"/notes/misc/linux-commands-system/","title":"Linux 系统级常用指令","lang":"en-US","frontmatter":{"title":"Linux 系统级常用指令","tags":["utils"],"createTime":"2023/10/03 12:09:35","permalink":"/notes/misc/linux-commands-system/","description":"系统级指令 启动过程 启动内核：系统引导开始，加载操作系统的内核。 运行init：init 是所有进程的起点，负责初始化系统。 确定运行级别： 0：停机。 1：单用户模式，仅 root 用户可以登录。 2：多用户模式（无网络）。 3：完全多用户模式（有网络）。 4：保留。 5：图形用户界面模式（GUI）。 6：系统重启。 这些级别的配置存放在 /etc...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 系统级常用指令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-21T10:32:27.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://saturntsen.github.io/notes/misc/linux-commands-system/"}],["meta",{"property":"og:site_name","content":"SaturnTsen"}],["meta",{"property":"og:title","content":"Linux 系统级常用指令"}],["meta",{"property":"og:description","content":"系统级指令 启动过程 启动内核：系统引导开始，加载操作系统的内核。 运行init：init 是所有进程的起点，负责初始化系统。 确定运行级别： 0：停机。 1：单用户模式，仅 root 用户可以登录。 2：多用户模式（无网络）。 3：完全多用户模式（有网络）。 4：保留。 5：图形用户界面模式（GUI）。 6：系统重启。 这些级别的配置存放在 /etc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-21T10:32:27.000Z"}],["meta",{"property":"article:tag","content":"utils"}],["meta",{"property":"article:modified_time","content":"2025-02-21T10:32:27.000Z"}]]},"readingTime":{"minutes":11.51,"words":3454},"git":{"createdTime":1734803041000,"updatedTime":1740133947000,"contributors":[{"name":"SaturnTsen","username":"SaturnTsen","email":"minger233@outlook.com","commits":5,"avatar":"https://avatars.githubusercontent.com/SaturnTsen?v=4","url":"https://github.com/SaturnTsen"}]},"autoDesc":true,"filePathRelative":"notes/misc/Linux Commands (System).md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"133904","sort":10001,"name":"misc"}]}');export{r as comp,n as data};
